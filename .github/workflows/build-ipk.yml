name: Build OpenWrt IPK Packages

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  release:
    types: [ published ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  id-token: write
  attestations: write

jobs:
  build:
    name: ${{ matrix.arch }} build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_generic
          - arm_cortex-a7_neon-vfpv4

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build with OpenWrt SDK
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}
          FEEDNAME: ispappd
          PACKAGES: ispappd
          V: s
          BUILD_LOG: 1
          INDEX: 1

      - name: Store packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-packages
          path: bin/packages/${{ matrix.arch }}/packages/*.ipk
          retention-days: 30
          if-no-files-found: warn

      - name: Store build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.arch }}-build-logs
          path: logs/
          retention-days: 7
          if-no-files-found: ignore

      - name: Prepare packages for R2 upload
        if: always()
        run: |
          # Create a directory for R2 upload
          mkdir -p r2-upload/packages
          
          # Copy IPK files if they exist
          if [ -d "bin/packages/${{ matrix.arch }}/packages" ] && [ "$(ls -A bin/packages/${{ matrix.arch }}/packages/*.ipk 2>/dev/null)" ]; then
            echo "=== IPK files found, copying to upload directory ==="
            cp bin/packages/${{ matrix.arch }}/packages/*.ipk r2-upload/packages/
          else
            echo "=== No IPK files found, creating build status file ==="
            echo "Build failed - no packages created on $(date)" > r2-upload/packages/build-failed.txt
            echo "Architecture: ${{ matrix.arch }}" >> r2-upload/packages/build-failed.txt
          fi
          
          # List what we're uploading
          echo "=== Packages prepared for R2 upload ==="
          ls -la r2-upload/packages/

      - name: Check R2 upload readiness
        if: always() && github.ref == 'refs/heads/main'
        id: check-r2-files
        run: |
          if [ -d "r2-upload/packages" ] && [ "$(ls -A r2-upload/packages)" ]; then
            echo "has-files=true" >> $GITHUB_OUTPUT
            echo "=== R2 upload directory is ready ==="
          else
            echo "has-files=false" >> $GITHUB_OUTPUT
            echo "=== R2 upload directory is empty, skipping upload ==="
          fi

      - name: Upload to Cloudflare R2
        uses: ryand56/r2-upload-action@latest
        if: always() && github.ref == 'refs/heads/main' && steps.check-r2-files.outputs.has-files == 'true'
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: r2-upload/packages/
          destination-dir: ispappd/builds/${{ github.run_number }}/${{ matrix.arch }}/
          output-file-url: true
          multipart-concurrent: true

  create-release:
    if: github.event_name == 'release'
    needs: [build]
    runs-on: ubuntu-latest
    name: Upload release assets
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Upload release assets to GitHub
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Prepare release packages for R2
      run: |
        # Create a directory structure for release packages
        mkdir -p release-packages
        
        # Extract only IPK files from artifacts
        find artifacts/ -name "*.ipk" -type f | while read ipk; do
          # Get the architecture from the artifact folder name
          arch=$(echo "$ipk" | grep -o '[^/]*-packages' | sed 's/-packages//')
          if [ -n "$arch" ]; then
            mkdir -p "release-packages/$arch"
            cp "$ipk" "release-packages/$arch/"
          fi
        done
        
        # List what we're uploading
        echo "=== Release packages prepared for R2 upload ==="
        find release-packages/ -name "*.ipk" -type f | sort
        echo "=== Total release package count: $(find release-packages/ -name '*.ipk' -type f | wc -l) ==="

    - name: Upload release assets to Cloudflare R2
      uses: ryand56/r2-upload-action@latest
      with:
        r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
        r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
        r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
        r2-bucket: ${{ secrets.R2_BUCKET }}
        source-dir: release-packages/
        destination-dir: ispappd/releases/${{ github.ref_name }}/
        output-file-url: true
        multipart-concurrent: true

  summary:
    needs: [build]
    runs-on: ubuntu-latest
    name: Build Summary
    if: always()
    
    steps:
    - name: Build Summary
      run: |
        echo "## Build Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### OpenWrt IPK Packages" >> $GITHUB_STEP_SUMMARY
        echo "- Built for aarch64_generic and arm_cortex-a7_neon-vfpv4 architectures" >> $GITHUB_STEP_SUMMARY
        echo "- Packages available in artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- Using OpenWrt official SDK Docker containers" >> $GITHUB_STEP_SUMMARY
